{
  "name": "Jcde2016-rpi",
  "tagline": "Documentation for JCDE2016 Raspberry Pi workshop",
  "body": "### O que é o Raspberry Pi?\r\n\r\nO Raspberry Pi é um minicomputador que se caracteriza pelo seu baixo custo e tamanho reduzido.\r\n\r\nA ideia inicial surgiu por volta de 2006 na Universidade de Cambridge, quando se detetou que os estudantes que frequentavam as primeiras cadeiras de ciências da computação tinham cada vez menos conhecimentos prévios de programação: se nos anos 90, era comum a maior parte dos alunos programarem nos tempos livres, nos anos 2000, o candidato típico tinha feito apenas um pouco de _web design_.\r\n\r\nForam identificadas várias causas para este problema, entre os quais a substituição dos Amigas, BBC Micros, Spectrum ZX e Commodore 64 (as máquinas em que as pessoas de gerações anteriores tipicamente aprendiam a programar) pelos modernos PCs e consolas de jogos.\r\n\r\nDeu-se então início ao desenvolvimento de um computador barato e de tamanho reduzido, que pudesse ser usado e abusado por crianças sem os receios que surgiriam num computador doméstico tradicional, de custo mais elevado.\r\n\r\nPor volta de 2008, os avanços tecnológicos na produção de processadores para dispositivos móveis tornaram-nos suficientemente potentes para suportarem multimédia com boa qualidade, o que permitiria desenvolver um computador atrativo mesmo para crianças que inicialmente não estivessem interessadas numa máquina puramente orientada para a programação.\r\n\r\n### Como ligar\r\n\r\n\r\n### Que modelos existem?\r\n### Acessórios\r\n### Onde comprar\r\n\r\n* https://eud.dx.com/\r\n* https://www.adafruit.com/\r\n* https://www.sparkfun.com/\r\n\r\n### Projetos\r\n### Links educativos\r\n### Lista de livros\r\n\r\n* \r\n\r\n### Tarefas dos projectos\r\n### ...\r\n\r\n### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here [using GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/), select a template crafted by a designer, and publish. After your page is generated, you can check out the new `gh-pages` branch locally. If you’re using GitHub Desktop, simply sync your repository and you’ll see the new branch.\r\n\r\n### Designer Templates\r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}